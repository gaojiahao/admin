<?phpinclude_once 'aliyun-php-sdk-core/Config.php';use Push\Request\V20150827 as Push;      // 设置你自己的AccessKeyId/AccessSecret/AppKey$accessKeyId = "LTAI4iA4uZjvE4J3";$accessSecret = "K5ixlwBsXARFopAmtBS06qD8hBGlG8";$appKey = 23824831;$iClientProfile = DefaultProfile::getProfile("cn-hangzhou", $accessKeyId, $accessSecret);$client = new DefaultAcsClient($iClientProfile);$request = new Push\PushRequest();// 推送目标$request->setAppKey($appKey);$request->setTarget("all"); //推送目标: device:推送给设备; account:推送给指定帐号,tag:推送给自定义标签; all: 推送给全部$request->setTargetValue("all"); //根据Target来设定，如Target=device, 则对应的值为 设备id1,设备id2. 多个值使用逗号分隔.(帐号与设备有一次最多100个的限制)$request->setDeviceType(1); // 设备类型deviceType 取值范围为:0~3. iOS设备: 0; Android设备: 1; 全部: 3, 这是默认值.// 推送配置$request->setType(1); // 0:表示消息(默认为0), 1:表示通知$request->setTitle("Hello OpenAPI!"); // 消息的标题$request->setBody("PushRequest body"); // 消息的内容$request->setSummary("PushRequest summary"); // 通知的摘要// 推送配置: Android$request->setAndroidOpenType("3"); // 点击通知后动作,1:打开应用 2: 打开应用Activity 3:打开 url 4 : 无跳转逻辑$request->setAndroidOpenUrl("http://www.baidu.com"); // Android收到推送后打开对应的url,仅仅当androidOpenType=3有效//$request->setsetXiaomiActivity("_Your_XiaoMi_Activity_");//设置该参数后启动小米托管弹窗功能，此处指定通知点击后跳转的Activity（托管弹窗的前提条件：1. 继承小米辅助通道；2. storeOffline设为true)$request->setAndroidExtParameters("{\"key1\":\"value1\",\"api_name\":\"PushNoticeToAndroidRequest\"}");// 推送控制$pushTime = gmdate('Y-m-d\TH:i:s\Z', strtotime('+3 second'));//延迟3秒发送$request->setPushTime($pushTime);$expireTime = gmdate('Y-m-d\TH:i:s\Z', strtotime('+1 day'));//设置失效时间为1天$request->setExpireTime($expireTime);$request->setTimeOut(3);$request->setStoreOffline("false"); // 离线消息是否保存,若保存, 在推送时候，用户即使不在线，下一次上线则会收到$response = $client->getAcsResponse($request);print_r("\r\n");print_r($response);// 设置你的AccessKeyId/AccessSecret/AppKey/*$accessKeyId = "LTAI4iA4uZjvE4J3";$accessSecret = "K5ixlwBsXARFopAmtBS06qD8hBGlG8";$appKey = 23824831;$iClientProfile = DefaultProfile::getProfile("cn-hangzhou", $accessKeyId, $accessSecret);$client = new DefaultAcsClient($iClientProfile);$request = new Push\PushMessageToAndroidRequest();$request->setAppKey($appKey);$request->setTarget("all"); //推送目标: device:推送给设备; account:推送给指定帐号,tag:推送给自定义标签; all: 推送给全部$request->setTargetValue("all"); //根据Target来设定，如Target=device, 则对应的值为 设备id1,设备id2. 多个值使用逗号分隔.(帐号与设备有一次最多100个的限制)$request->setMessage("PushMessageToAndroid from OpenAPI!");$response = $client->getAcsResponse($request);print_r("\r\n");print_r($response);*/// 设置你的AccessKeyId/AccessSecret/AppKey/*$accessKeyId = "LTAI4iA4uZjvE4J3";$accessSecret = "K5ixlwBsXARFopAmtBS06qD8hBGlG8";$appKey = 23824831;$iClientProfile = DefaultProfile::getProfile("cn-hangzhou", $accessKeyId, $accessSecret);$client = new DefaultAcsClient($iClientProfile);$request = new Push\PushNoticeToAndroidRequest();$request->setAppKey($appKey);$request->setTarget("all"); //推送目标: device:推送给设备; account:推送给指定帐号,tag:推送给自定义标签; all: 推送给全部$request->setTargetValue("all"); //根据Target来设定，如Target=device, 则对应的值为 设备id1,设备id2. 多个值使用逗号分隔.(帐号与设备有一次最多100个的限制)$request->setTitle("Hello OpenAPI!");$request->setSummary("summary");$request->setAndroidExtParameters("{\"key1\":\"value1\",\"api_name\":\"PushNoticeToAndroidRequest\"}");$response = $client->getAcsResponse($request);print_r("\r\n");print_r($response);*/?>